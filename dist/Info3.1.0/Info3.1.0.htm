<html>
<head>
  <meta http-equiv=Content-Type content="text/html; charset=utf-8">
  <title>Классические идеи теории графов</title>
  <link rel="stylesheet" type="text/css" href="../style/style.css">
  <script type="text/x-mathjax-config">
    MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
  </script>
  <script type="text/javascript"
          src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
  </script>
</head>
<body>
<div style="width:80%;">
  <div style="float:right;">
    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
            codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swfla
sh.cab#version=6,0,0,0" width="100" height="50">
      <param name="movie"
             value="../audio/a_smsqulh3n.swf">
      <param name="bgcolor"
             value="fff">
      <param name="FlashVars"
             value="src=../audio/8016574696f613132301------------ffffff">
      <param
          name="autoplay" value="false">
      <embed src="../audio/a_smsqulh3n.swf"
             bgcolor="fff" width="100" height="70" type="application/x-shockwave-
flash" pluginspage="http://www.macromedia.com/go/getflashplayer"
             FlashVars="src=../audio/8016574696f613132301------------ffffff"></embed>
    </object>
  </div>
</div>

<div id="content" style="width:80%;">
  <h1>3.1. Классические идеи теории графов </h1>

  <h2><strong>История возникновения теории графов</strong></h2>

  <p> Родоначальником теории графов считается Леонард Эйлер. В 1736 году в одном из своих писем он формулирует и
    предлагает
    решение задачи о семи кёнигсбергских мостах, ставшей впоследствии одной из классических задач теории графов. </p>

  <p>Издавна среди жителей Кёнигсберга была распространена такая загадка: как пройти по всем мостам, не проходя ни по
    одному из них дважды? Многие кёнигсбержцы пытались решить эту задачу как теоретически, так и практически, во время
    прогулок. Но никому это не удавалось, однако не удавалось и доказать, что это даже теоретически невозможно.</p>

  <p>В 1736 году задача о семи мостах заинтересовала выдающегося математика, члена Петербургской академии наук
    Леонарда Эйлера, о чём он написал в письме итальянскому математику и инженеру Мариони от 13 марта 1736 года. В этом
    письме
    Эйлер пишет о том, что он смог найти правило, пользуясь которым легко определить, можно ли пройти по всем мостам,
    не проходя дважды ни по одному из них (в случае семи мостов Кёнигсберга это невозможно).</p>

  <p>На упрощённой схеме части города (графе) мостам соответствуют линии (рёбра графа), а частям города — точки
    соединения линий (вершины графа). В ходе рассуждений Эйлер пришёл к следующим выводам:</p>
  <ul>
    <li>Число нечётных вершин (вершин, к которым ведёт нечётное число рёбер) графа должно быть чётно. Не может
      существовать граф, который имел бы нечётное число нечётных вершин.
    </li>
    <li>Если все вершины графа чётные, то можно, не отрывая карандаша от бумаги, начертить граф, при этом можно
      начинать с любой вершины графа и завершить его в той же вершине.
    </li>
    <li>Граф с более чем двумя нечётными вершинами невозможно начертить одним росчерком.</li>
  </ul>
  <p>Граф кёнигсбергских мостов имел четыре нечётные вершины (т.е. все), следовательно, невозможно пройти по всем
    мостам, не проходя ни по одному из них дважды.</p>
  <img src="img/konigsberg.png" alt=""> <img src="img/konigsberg_bridges.png" alt=""> <img
    src="img/konigsberg_graph.png" alt="Кёнигсбергские мосты в виде графа">

  <p> Теория графов чаще всего применяется для поиска различных путей.
    Например, кратчайшего пути между двумя заданными пунктами при заданной сети дорог. </p>

  <h2>Определения теории графов</h2>

  <p><strong>Граф</strong> - совокупность конечного числа
    точек, называемых <strong>вершинами</strong> графа, и попарно соединяющих некоторые из этих
    вершин линий, называемых <strong>ребрами</strong> или <strong>дугами</strong> графа.</p>

  <p>&nbsp;</p>

  <p>Граф</p>

  <p align="center"><img src="img/img00.gif" width="340" height="358" alt="Граф"></p>

  <p align="center">Рис. 1</p>

  <p>Взвешенным графом называется граф, у которого заданы веса ребёр, которые означать в данной задаче расстояние между
    городами (если вершины - это города).</p>

  <h2>&nbsp;</h2>

  <p><strong>Понятия теории графов:</strong></p>

  <p>&nbsp;</p>

  <div align="center"><strong>Пример: граф с шестью вершинами и семью рёбрами</strong><br>
    <img src="img/graph_6_7.png" alt="">

  </div>
  <p>Это определение можно сформулировать иначе: <strong>граф</strong> -
    непустое множество точек (<strong>вершин</strong>) и отрезков (<strong>ребер</strong>), оба конца которых
    принадлежат заданному множеству точек.</p>

  <p>Вершины графа, которые не принадлежат ни одному
    ребру, называются <strong>изолированными</strong>.</p>

  <p>Граф, состоящий только из изолированных вершин,
    называется <strong>нуль-графом</strong>.</p>

  <img src="img/null_graph.gif" alt="">

  <p>Граф, в котором каждая пара вершин соединена
    ребром, называется <strong>полным</strong>.
    Обозначение: <strong><i>K</i><sub>n</sub></strong> – граф, состоящий из <strong>n</strong> вершин и ребер,
    соединяющих
    всевозможные пары этих вершин. Такой граф можно представить как n–угольник,
    в котором проведены все диагонали.</p>

  <p>Ниже приведены полные графы с числом вершин от 1 до 8 и количества их рёбер.</p>
  <table>
    <tr>
      <th><span class="texhtml"><i>K</i><sub>1</sub></span>: 0</th>
      <th><span class="texhtml"><em>K</em><sub>2</sub></span>: 1</th>
      <th><span class="texhtml"><i>K</i><sub>3</sub></span>: 3</th>
      <th><span class="texhtml"><i>K</i><sub>4</sub></span>: 6</th>
    </tr>
    <tr>
      <td><img alt="Complete graph K1" src="img/complete_graph_K1.png"/></td>
      <td><img alt="Complete graph K2" src="img/complete_graph_K2.png"/></td>
      <td><img alt="Complete graph K3" src="img/complete_graph_K3.png"/></td>
      <td><img alt="Complete graph K4" src="img/complete_graph_K4.png"/></td>
    </tr>
    <tr>
      <th><span class="texhtml"><i>K</i><sub>5</sub></span>: 10</th>
      <th><span class="texhtml"><i>K</i><sub>6</sub></span>: 15</th>
      <th><span class="texhtml"><i>K</i><sub>7</sub></span>: 21</th>
      <th><span class="texhtml"><i>K</i><sub>8</sub></span>: 28</th>
    </tr>
    <tr>
      <td><img alt="Complete graph K5" src="img/complete_graph_K5.png"/></td>
      <td><img alt="Complete graph K6" src="img/complete_graph_K6.png"/></td>
      <td><img alt="Complete graph K7" src="img/complete_graph_K7.png"/></td>
      <td><img alt="Complete graph K8" src="img/complete_graph_K8.png"/></td>
    </tr>
  </table>


  <p><strong>Степенью</strong> вершины называется число ребер, которым
    принадлежит вершина (число рёбер с концом в данной вершине).</p>


  <p><strong>Дополнением данного графа</strong> называется граф,
    состоящий из всех ребер и их концов, которые необходимо добавить к
    исходному графу, чтобы получить полный граф.</p>

  <p>Граф, который можно представить на плоскости в
    таком виде, когда его ребра пересекаются только в вершинах, называется <strong>плоским</strong>.</p>

  <p> Многоугольник плоского графа, не содержащий внутри
    себя никаких вершин или ребер графа, называют его гранью.</p>

  <p> Понятия плоского графа и грани графа применяется при решении задач на
    "правильное" раскрашивание различных карт. </p>

  <p><strong>Путем</strong> от вершины A до вершины X называется последовательность
    ребер, ведущая от A к X, такая, что каждые два соседних ребра имеют общую
    вершину, и никакое ребро не встречается более одного раза.</p>

  <p><strong>Циклом</strong> называется путь, в котором совпадают
    начальная и конечная точка (т.е. можно &quot;ходить по циклу&quot; - &quot;ходить по кругу&quot;).</p>

  <img src="img/graph_cycle.png" alt="">

  <p><strong>Простым циклом</strong> называется цикл, не проходящий ни
    через одну из вершин графа более одного раза.</p>

  <p><strong>Длиной пути</strong>, проложенного на цикле, называется число
    ребер этого пути.</p>

  <p>Две вершины A и B в графе называются <strong>связными</strong> (<strong>несвязными</strong>), если в нем существует
    (не существует) путь, ведущий из A в B.</p>

  <p>Граф называется <strong>связным</strong>, если каждые две его
    вершины связны; если же в графе найдется хотя бы одна пара несвязных
    вершин, то граф называется несвязным.</p>

  <p>Деревом называется связный граф, не содержащий
    циклов.</p>

  <p>Трехмерной моделью графа-дерева служит, например, настоящее дерево с
    его замысловато разветвленной кроной; река и ее притоки также образуют
    дерево, но уже плоское – на поверхности земли.</p>

  <p><strong>Задача: проверка связности графа</strong></p>

  <p> Требуется проверить, что граф является <strong> связным</strong>, то есть что
    из любой вершины можно по рёбрам этого графа попасть в любую другую. Задано количество вершин <em><strong>N</strong></em>
    и количество рёбер <em><strong>M</strong></em>. Рёбра заданы парами вершин, которые они соединяют.</p>

  <p><strong>Решение задачи:</strong></p>

  <p>Граф удобно представить в памяти в виде матрицы смежности (матрицы инцинденций).</p>

  <p><strong>Матрица смежности</strong> - квадратная матрица (таблица)
    <em><strong>N</strong></em>x<em><strong>N</strong></em> (<em><strong>N</strong></em> - количество вершин графа),
    <strong><em>j</em></strong>-ый элемент <em><strong>i</strong></em>-ой строки обозначает есть ли ребро из вершины
    <strong><em>i</em></strong> в вершину <em><strong>j</strong></em>.</p>

  <p>&nbsp;</p>

  <p>&nbsp;</p>

  <h1>Классические задачи</h1>

  <h2>Проблема четырёх красок</h2>

  <img src="img/four_colour_map_example.png" alt="">

  <p>Проблема четырёх красок — математическая задача, предложенная Гутри (англ.) в 1852 году.</p>

  <p>Выяснить, можно ли всякую расположенную на сфере карту раскрасить четырьмя красками так, чтобы любые две области,
    имеющие общий участок границы, были раскрашены в разные цвета.
  </p>

  <p>Иначе говоря, показать что хроматическое число плоского графа не превосходит 4.</p>

  <strong>О доказательстве</strong>

  <p>К. Аппель и В. Хакен доказали в 1976 г., что так можно раскрасить любую карту. Это была первая крупная
    математическая теорема, для доказательства которой был применён компьютер. Несмотря на последующие упрощения,
    доказательство практически невозможно проверить, не используя компьютер. Поэтому некоторые математики отнеслись к
    этому доказательству с недоверием, что объяснялось не только использованием компьютера, но и громоздкостью
    описания алгоритма первых доказательств (741 страница), впоследствии были предложены более компактные алгоритмы и
    скорректирован ряд ошибок. Проблема четырех красок является одним из известнейших прецедентов неклассического
    доказательства в современной математике.
  </p>

  <h2>Представление графа в памяти и при вводе/выводе</h2>

  <p><strong>Матрица смежности</strong></p>

  <p>Для графа из $N$ вершин матрица смежности = квадратная матрица $N \times N$ клеток. Элемент в $i$-ой строке и
    $j$-ом столбце означает есть ли ребро из $i$-ой вершины $j$-ую вершину.</p>

  <p>Если граф взвещенный, то $i,j$-ый элемент равен весу ребра. Отсутствующие рёбра инициализируются специальными
    значениями (которые можно отличить от весов ребёр). Если мы будем использовать матрицу смежности для поиска
    кратчайших расстояний, то отсутствующие рёбра удобно проинициализировать в ооочень большое число (заведомо большее
    любого из тех, которые могут получится при вычислениях). Например, сумма весов всех ребёр + 1 или максимум для типа
    данных разделить на 2 (если веса ребёр типа LongInt, то это MaxLongInt div 2), чтобы при сложении весов 2-х ребёр не
    было переполнения.</p>

  <p align="center"><img src="img/175px-6n-graph2.svg.png" alt="6n-graph2.svg"/> <img
      src="img/53e3bdee8fec62c1002ccb39c461b51e.png"
      alt="\begin{pmatrix}  1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0\\  1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0\\  0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 1\\  1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  \end{pmatrix}"/>
  </p>

  <p align="center">Граф и его матрица смежности.</p>

  <p>В качестве примера приведём чтение из файла списка ребёр и формирование в памяти матрицы смежности. </p>

  <p><strong>Матрица инциденций</strong></p>

  <p>Ребро инциндентно вершине, а вершина инциндента ребру, если вершина является одним из &quot;концов&quot;
    ребра. </p>

  <p>Если $N$ - количество вершин, а $M$ - количество рёбер, то матрица инцинденций, это матрица $N \times M$ элементов,
    элемент в $i$-ой строке и $j$-ом столбце равен 1 если $i$ вершина и $j$-ое ребро инциндентны и 0 в противном
    случае. </p>

  <p><strong>Списки смежности (для каждой вершины список исходящих ребёр)</strong></p>

  <p>Список смежности..... р</p>

  <p><strong>1. Задача на Эйлеров путь в графе</strong></p>

  <p> Определить последовательность вершин,через которые необходимо пройти, чтобы нарисовать заданный граф. Нельзя
    отрывать карандаш от бумаги и проходить по одной и той же дуге несколько раз. Граф задан матрицей смежности,
    вводимой с клавиатуры. </p>
  <pre class="sh_cpp">
  #include &lt;iostream&gt;
  
  </pre>
  <p>&nbsp;</p>

  <p><strong>2. Обход дерева</strong></p>

  <p> По данным, хранящимся в текстовом файле, построить дерево бинарного поиска.Обойти полученное дерево в симметричном
    и прямом порядке. </p>
  <pre class="sh_cpp">
  #include &lt;iostream&gt;
  
  </pre>
  <p>&nbsp;</p>

</div>

</body>

</html>