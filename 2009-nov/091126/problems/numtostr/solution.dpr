{ Дано число N, требуется вывести соответствующее числительное на русском языке. 
Входные данные:
Во входном файле записано одно целое число 0 < N < 10^9.
Выходные данные:
В выходной файл нужно вывести числительное.
Примеры:
1 -> один
13 -> тринадцать
343 -> триста сорок три
23 377 324 -> двадцать три миллиона триста семьдесят семь тысяч триста двадцать четыре

"+". Очень легкий вход и более сложный выход. Учителя смогут сами сочинять тесты к задаче
"-". Чтобы качественно протестировать задачу, нужно много тестов.
В частности, нужно протестировать, что работают все слова:
Слова: "один", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять", "десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать", "двадцать", "тридцать" и т.д. }

{$APPTYPE CONSOLE}

Uses SysUtils;

type TRod = (MR,ZR);

Const
  ES : array [MR..ZR,0..19] of string = { Единицы (Мужской род) }
    (('','один', 'два', 'три', 'четыре', 'пять',
      'шесть', 'семь', 'восемь', 'девять', 'десять',
      'одиннадцать', 'двенадцать', 'тринадцать', 'четырнадцать', 'пятнадцать',
      'шестнадцать', 'семнадцать', 'восемнадцать', 'девятнадцать'),
                                        { Единицы (Женский род) }
    ('','одна', 'две', 'три', 'четыре', 'пять',
     'шесть', 'семь', 'восемь', 'девять', 'десять',
     'одиннадцать', 'двенадцать', 'тринадцать', 'четырнадцать', 'пятнадцать',
     'шестнадцать', 'семнадцать', 'восемнадцать', 'девятнадцать') );
  DS : array [0..9] of string = { Десятки }
     ('','','двадцать','тридцать', 'сорок', 'пятьдесят', 'шестьдесят', 'семьдесят',
      'восемьдесят', 'девяносто');
  SS : array [0..9] of string = { Сотни }
     ('','сто', 'двести', 'триста', 'четыреста','пятьсот','шестьсот', 'семьсот',
      'восемьсот', 'девятьсот');
  TE : array [0..3] of string = { Тысячи }
     ( '', 'тысяча', 'тысячи', 'тысяч' );
  ME : array [0..3] of string = { Миллионы }
     ( '', 'миллион', 'миллиона', 'миллионов' );

// Для чисел в диапазоне 0..999, для нуля - пустая строка
function Num( N:Integer; Rod:TRod ):string;
var D,E,S:Integer;
begin
  assert( (0<=N) and (N<=999));
  E := N mod 10; // Выделили единицы
  D := (N div 10) mod 10; // Выделили десятки
  S := (N div 100) mod 10; // Выделили сотни
  if D=1 then E := E + D*10; // Если число 10..19, то добавляем к единицам десятки
    // Чтобы кооректно отображались 11..19
  Result := SS[S] + ' ' + DS[D] + ' ' + ES[Rod,E]; // Получаем ответ
end;

// Определяем номер нужного нам слова-окончания ("тысяч","миллионов" и т.д.)
function Calc( N:Integer ):Integer;
var D,E : Integer;
begin
  assert( (0<=N) and (N<=999));
  // Отдельный случай - 0 - никакого окончания не надо выводить
  if N = 0 then begin Result:=0; exit; end;
  // Выделили единицы, десятки, сотни
  E := N mod 10; // Выделили единицы
  D := (N div 10) mod 10; // Выделили десятки
  case E of
    0: Result := 3; // Сто тысяч
    1: Result := 1; // Одна тысяча, 21 тысяча
    2..4: Result := 2; // 2 тысячи, 32 тысячи
    5..9: Result := 3; // 5 тысяч, 35 тысяч
  end;
  if D = 1 then Result := 3; // 11..19 тысяч
end;

// И, наконец, сама функция
function toNum( N:Integer ):string;
var
  D,E,S,T,M,i:Integer;
begin
  assert( (1<=N) and (N<=999999999));
  E := N mod 1000; // Выделили единицы
  T := (N div 1000) mod 1000; // Выделили тысячи
  M := (N div 1000000) mod 1000; // Выделили миллионы
  Result := Num(M,MR)+' '+ME[Calc(M)]+' '+
            Num(T,ZR)+' '+TE[Calc(T)]+' '+
            Num(E,MR);
  // Удаляем лишние пробелы
  Result := Trim(Result);
  for i:=Length(Result) downto 2 do begin
    assert( (1<=i) and (i<=Length(Result)) );
    if ((Result[i]=' ') and (Result[i-1]=' ')) then
      Delete(Result,i,1);
  end;
end;

var i,Tests,Test,N:Integer;
begin
  for i:=1 to 19 do
    assert( toNum(i)=ES[MR,i] );
  assert( toNum(20) = 'двадцать' );
  assert( toNum(1) = 'один' );
  assert( toNum(13) = 'тринадцать' );
  assert( toNum(23) = 'двадцать три', toNum(23) );
  assert( toNum(343) = 'триста сорок три', toNum(343) );
  assert( toNum(23377324) = 'двадцать три миллиона триста семьдесят семь тысяч триста двадцать четыре',  toNum(23377324) );
(*  for i:=1 to 10000 do
    writeln( toNum(random(999999999)+1)+'.' ); *)
  Assign( input,'numtostr.in' ); Reset( input );
  Assign( output,'numtostr.out' ); Rewrite( output );
  Read(Tests);
  for Test:=1 to Tests do begin
    Read(N);
    Writeln(toNum(N));
  end;
end.
